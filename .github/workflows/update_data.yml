name: Update source data

on:
  schedule:
    # cron format: minute hour day-of-month month day-of-week
    - cron: '45 0,11 * * *'
  workflow_dispatch:
    inputs:
      trigger_api_build:
        description: 'If "true" API snapshot build will be triggered after dataset update in covid-data-model.'
        default: 'false'

env:
  # Used by python code that reports errors to sentry.
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_ENVIRONMENT: 'production'
  TRIGGER_API_BUILD: ${{ github.event.inputs.trigger_api_build }}

jobs:
  update-source-data:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7.6'
        architecture: 'x64'
    - name: Cache Pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install Dependencies
      run: pip install -r requirements.txt
    - name: Update Datasets
      run: ./update.sh
      env:
        # API key information at https://github.com/valorumdata/cmdc.py#api-keys
        # Key was created for tom@covidactnow.org, then copied from ~/.cmdc/apikey to
        # https://github.com/organizations/covid-projections/settings/secrets
        CMDC_API_KEY: ${{ secrets.CMDC_API_KEY }}
        # Z username and password are for the CDC Reich Lab Forecast Hub and were generated for
        # brett@covidactnow.org and then copied to the github account secrets.
        Z_USERNAME: ${{ secrets.Z_USERNAME }}
        Z_PASSWORD: ${{ secrets.Z_PASSWORD }}
    - name: Create Update Commit
      run: ./push_update.sh
    - name: Trigger Covid Data Model Dataset Update
      uses: benc-uk/workflow-dispatch@v1
      with:
        token: ${{ secrets.CAN_ROBOT_PERSONAL_ACCESS_TOKEN }}
        repository: covid-projections/covid-data-model
        workflow: 'Update combined datasets'
        inputs: '{ "trigger_api_build": "${{ env.TRIGGER_API_BUILD }}" }'
    - name: Slack notification
      if: always() # Pick up events even if the job fails or is canceled.
      env:
        # Susan created webhook URLs (one per channel) at
        # https://api.slack.com/apps/A0122UH75HQ/incoming-webhooks and Tom copied them to
        # https://github.com/organizations/covid-projections/settings/secrets with
        # names SLACK_WEBHOOK_DEV_ALERTS and SLACK_WEBHOOK_ENG. The webhook determines
        # the channel. See also
        # https://covidactnow.slack.com/archives/C0110QQAPJA/p1589322334246900 and
        # https://trello.com/c/gq2JlOU9/123-add-slack-notification-for-covid-data-public and
        # https://trello.com/c/irJrdQZc/211-fix-update-source-data-slack-notification
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DEV_ALERTS }}
        STATUS: ${{job.status}}
      uses: Ilshidur/action-slack@fb92a78
      with:
        args: 'update-source-data finished with status {{STATUS}}'
